$color-active: #04AA6D;

// $color-background-1: #23272f;
// $color-background-2: #04aa6d63;

$color-hover-dark: hsla(0, 0%, 0%, 0.2);
$color-hover-light: hsla(0, 0%, 100%, 0.2);
$color-same: hsla(0, 0%, 0%, 0);

$color-separator: #343A45;

$color-text-1: hsl(0, 0%, 100%);
$color-text-active: hsl(0, 0%, 100%);
$color-text-inactive: hsl(0, 0%, 70%);
// $color-text-1: hsl(220, 20%, 97%);
$color-text-2: #109FAB;

// color scheme?
$color-dark-1: hsl(220, 15%, 16%);
$color-dark-2: hsl(186, 89%, 21%); //TODO
$color-light-1: hsl(220, 30%, 30%);
$color-light-2: hsl(99, 23%, 39%); //TODO
$color-light-3: hsl(51, 94%, 27%); //TODO

$width-scrollbar: 17px;
$height-mobile-topbar: 40px;


//
// TODO
//

* {
    box-sizing: border-box;
}

//TODO; debug;
// a, button {
// border: 3px solid aqua;
// border-style: groove;
// }

// .desktop-navbar {
//     background-color: aqua;
// }
// 
// // @media (hover: none) {
.desktop {
    display: none;
}

// 
// // }
// 
// .desktop-dropdown {
//     // background-color: #be2828;
//     display: inline-block;
//     // margin: 10px;
//     position: relative;
//     // width: 10%;
//     // width: fit-content;
// 
//     @media (hover: hover) {
//         &:hover .desktop-dropdown-content {
//             display: block;
//         }
//     }
// }
// 
// .desktop-dropdown-content {
//     background-color: $color-background-1-overlay;
//     // background-color: rgba(86, 148, 38, 0.685);
//     // opacity: 100%;
//     display: none;
//     margin: 0px;
//     position: absolute;
//     box-sizing: border-box;
//     // width: 100%;
//     z-index: 1000;
// 
//     > a {
//         display: block;
//         margin: 3px;
//     }
// }
// 
// // @media (hover: hover) {
// //     .mobile {
// //         display: none;
// //     }
// // }
// 
// //orientation; TODO?;
// //hover
// // @media (hover: none) {
// .desktop-dropdown, .desktop-navbar {
//     display: none;
// }
// 
// // }
// 
// // @media (hover: hover) {
// //     .mobile-dropdown, .mobile-topbar {
// //         display: none;
// //     }
// // }
// 
// // @media (hover: none) {
// //     .dropdown.active .dropdown-content {
// //         display: block;
// //     }
// // }

.relative {
    position: relative;
}

.absolute {
    position: absolute;
}

:focus-visible {
    outline-offset: -1px;

    // kinda works unless the mouse hovers over the element before you tab to it;
    // without this you have a little bit of background outside the outline;
    // border-radius: 10px;
}

//
// based on class;
//

.flex {
    display: flex;
}

.flex-column {
    // sets flow-direction as well;
    flex-flow: column;

    > .flex {
        margin: 3px;
    }
}

.flex-row {
    flex-flow: row;

    > .flex {
        margin: 3px;
    }
}

.fg-space-between {
    // for grids this applies when rows or columns are not filling the whole container;
    align-content: space-between;
    justify-content: space-between;
}

.fg-space-evenly {
    align-content: space-evenly;
    justify-content: space-evenly;
}

.fg-space-center {
    align-content: center;
    justify-content: center;
}

// for flex containers and grids;
.fg-items-center {
    align-items: center;

    // ignored in flex container;
    justify-items: center;
}

.fg-items-center-main {
    align-items: center;
}

.flex-main-stretch {
    align-items: stretch;
}

.flex-self-center {
    display: flex;
    justify-content: center;
    width: 100%;
}

.grid {
    display: grid;

    // otherwise, centering vertically might be impossible;
    // this time, it stayed smaller than the parent container; without, it centered itself;
    // height: 100%;
    // width: 100%;
}

.grid-row-20-80 {
    grid-template-columns: 20% 80%;
}

.grid-topbar {
    grid-template-columns: auto auto auto;
    // grid-template-columns: 40px auto 260px;
}

.grid-dropdown {
    grid-template-columns: auto 40px;
}

.grid-row-80-20 {
    grid-template-columns: 80% 20%;
}

.grid-fit-right {
    align-content: center;
    margin-left: auto; // !important;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
}

.grid-fit-center {
    margin: auto;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    height: -webkit-fit-content;
    height: -moz-fit-content;
    height: fit-content;
}

.hidden {
    display: none;
}

.icon.hidden {
    // transform: 'scaleX(0)';
    opacity: 0;
}

.icon-large {
    font-size: 48px;
    padding: 6px;
    // transition: all 0.3s ease-out;
    // animation-timing-function: ease-out;
}

.icon-medium {
    font-size: 32px;
    padding: 4px;
    // used in dropdown menu icons;
    transition: all 0.3s ease-out;
    // animation-timing-function: ease-out;
    // animation-fill-mode: forwards;
}

.icon-row {
    margin: 0px 10px;
}

.inline {
    // display: inline;
    display: inline-block;
}

.margin-lr-10 {
    margin-left: 10px;
    margin-right: 10px;
}

.menu-button {
    // when using position: absolute on the icons; 
    height: 40px;
    // aspect-ratio: 1;
    // height: fit-content;
    // border-width: 1px;

    // for navigating with keys;
    // height: calc($height-mobile-topbar - 2px);
    // width: calc($height-mobile-topbar - 2px);
    // height: 32px;
    // width: 32px;
}

.mobile-dropdown-content {
    background-color: $color-dark-1;
    color: $color-text-active;
    display: block;

    // TODO
    // height: 0;
    height: 0;
    transition: all 0.3s ease-out;
    overflow-y: hidden;
    // margin-top: -100%;
    // position: relative;
    // z-index: 0;
    // transition

    &.active {
        background-color: $color-light-1;
        // height: fit-content;
        // transition: all 0.3s ease-out;
    }

    &:not(.active) a {
        color: $color-text-inactive;
    }
}

.mobile-dropdown-content a {
    padding-left: 30px;
}

.mobile-dropdown-menu {
    &.active {
        background-color: $color-light-1;
        color: $color-text-active
    }

    &:not(.active) a {
        color: $color-text-inactive
    }
}

.mobile-dropdown-menu > a {
    // otherwise, overriden by user agent;
    font-size: 1.5em;

    // padding-left: 20px;
    padding: 15px 20px 15px 20px;
}

// I don't like how big this class is; TODO;
.mobile-sidebar {
    position: fixed;
    // box-sizing: content-box; //TODO

    // fill out the whole left side;
    height: calc(100vh - $height-mobile-topbar);
    // height: 100%;

    background-color: $color-dark-1;
    box-shadow: 0px 10px 10px 0px $color-hover-dark;
    line-height: 2.5em;

    overflow-x: hidden;
    overflow-y: auto;
    // scrollbar-color: hsl(0, 0%, 50%) transparent;
    scrollbar-gutter: stable;

    // question: is it preferable to use 70% and making sure that body / html are 100vw?
    // there was one case where 100vw lead to scrolling in x; the scrollbar in y direction
    // added more width or something; hm...; TODO;
    // probably the other way around; body / html to 100% such that they can adept when 
    // a scroll bar appears; still in that case 100vw > 100% and lead to overflow in
    // x; not sure;
    width: min(500px, 70vw);
    left: max(-500px, -70vw);
    z-index: 100;
}

.mobile-sidebar > a {
    padding-left: 15px;
}

.mobile-sidebar a {
    // border-top: 2px solid transparent;
    // border-bottom: 2px solid transparent;
    border: 2px solid transparent;
    display: block;

    margin-top: 0;
    // margin-right: -$width-scrollbar - 2px;
    margin-bottom: 0;
    // margin-left: -2px;

    // &:hover, &:focus-visible {
    //     background-color: $color-hover-dark
    // }
}

.mobile-topbar {
    align-content: center;
    background-color: $color-dark-1;
    box-shadow: 0px 0px 10px 0px $color-hover-dark;
    height: $height-mobile-topbar;
}

.padding-lr-10 {
    padding-left: 10px;
    padding-right: 10px;
}

.self-center {
    // should be enought to override user agent;
    margin-left: auto; // !important;
    margin-right: auto; // !important;
}

.self-right {
    margin-left: auto; // !important;
}

.self-top {
    margin-bottom: auto;
}

.sticky {
    position: -webkit-sticky;
    position: sticky;
    top: 0px;
    z-index: 100;
}

.width-full-both-edges {
    width: calc(100% + 2 * $width-scrollbar);
}

.width-full-edge {
    width: calc(100% + 1 * $width-scrollbar);
}

//
// based on type;
//

a {
    // for navigating with keyboard; does not help;
    // border: 2px solid transparent;
    // background-color: $color-same;
    // padding: 0;

    // margin: 2px;
    // box-sizing: border-box;
    // background-color: hsla(0, 0%, 0%, 0.2);
    color: $color-text-active;
    // color: $color-text-inactive;
    // color: $color-text-1;
    display: block;
    text-decoration: none;

    //TODO
    &:hover, &:focus-visible {
        background-color: hsla(0, 0%, 100%, 0.3)
    }

    // &:visited, &:hover {
    //     color: $color-text-1;
    // }
}

a.inactive {
    color: $color-text-inactive;
}

body {
    // prevent unintended scrolling;
    // height: 100vh;
    // height: 100%;

    // 100vw is problematic; it seems that the scroll bar can add to the total width
    // otherwise;
    width: 100%;

    background-color: $color-dark-1;
    color: $color-text-1;

    // font-size: 1em;
    // 100% because of problems with internet explorer?;
    font-size: 100%;
    font-family: Helvetica, Arial, sans-serif;

    margin: 0px;
    padding: 0px;

    // google fonts;
    // font-family: "Sofia", sans-serif;

    // copied from index.css;
    // font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    // bug?; otherwise, makes it still scroll a pixel or so; no it is because top 
    // does not account for borders; it scrolls the border-width amount;
    // border-top: 0px; 
    // border-bottom: 0px;
}

button {
    border: 3px solid transparent;
    background-color: $color-same;
    padding: 0;

    &:hover, &:focus-visible {
        background-color: $color-hover-dark;
    }
}

footer {
    // for now the same height;
    height: $height-mobile-topbar;
}

html {
    // @extend .width-full-edge;

    //TODO;
    color-scheme: dark;

    scrollbar-color: hsl(0, 0%, 50%) transparent;

    // disable for debugging;
    // overflow-x: hidden;

    // by default the width does not include the margin; prevent things from getting
    // larger than 100vw, 100vh;
    margin: 0px;
    padding: 0px;

    // default = content-box;
    // box-sizing: content-box
}

hr {
    margin: 0;
}

li {
    line-height: 1.5em;
    margin-bottom: 10px;
    // font-size: 0.625em;
}

main {
    // z-index: 1;
    // background-color: transparent;
    height: calc(100vh - $height-mobile-topbar);
    padding: 0 60px 0 30px;
    transition: background-color 0.3s ease-out 0s;

    // do scroll stuff here; otherwise, the topbar can get padding;
    overflow-y: auto;

    overflow-wrap: break-word;
    scrollbar-gutter: stable both-edges;
    text-wrap: wrap;

    // inherited from html;
    // scrollbar-color: hsl(0, 0%, 50%) transparent;

    // only scroll this container;
    -ms-scroll-chaining: none;
    overscroll-behavior: contain;

    &.inactive {
        background-color: $color-hover-dark;
        color: $color-text-inactive;
        overflow-y: hidden;
    }
}

strong {
    // font-weight: 800
    font-family: math;
}

ul {
    list-style: "- ";
    // font-size: 1.6em;
}